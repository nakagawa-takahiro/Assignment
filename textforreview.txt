message/index.php (チャット画面)

===============================================

<form action="" method="post" data-bind="submit: addItem">
    <!-- <input type="text" name="username" data-bind='value: itemToAdd, valueUpdate: "afterkeydown"'> -->
    <input type="text" name="content" data-bind='value: itemToAdd, valueUpdate: "afterkeydown"'>
    <button onclick="submitForm();" data-bind="enable: itemToAdd().length > 0">送信</button>
    <p multiple="multiple" width="50" data-bind="text: items"> </p>
    
</form>

<script type="text/javascript">


    function submitForm(){
        var username = "user1";
        var content = $('input[name=content]').val();
        var formData = {
            username: username,
            content: content
        };
        console.log(formData);

        $.ajax({
            url: "http://localhost/chat/chat_post.json",
            type: 'POST',
            cache: false,
            dataType : 'json',
            data: formData,

        }).done(function(data) {
            // alert('成功');

        }).fail(function() {
            // alert('失敗');
        });
    }

    // 表示するためにゴリ押ししてます…
    var json = 
    '<?php
      $json=json_encode($contents);
      echo $json;
    ?>'
    
    const obj = JSON.parse(json);
    console.log(obj['content']);

    var chat = [];

    obj.forEach(function(element){
        // console.log(element['content']);
        chat.push(element['content']);

    });
    console.log(chat);

    var items = chat;

    var SimpleListModel = function(items) {
        
        this.items = ko.observableArray(items);
        this.itemToAdd = ko.observable("");
        this.addItem = function() {
            if (this.itemToAdd() != "") {
                this.items.push(this.itemToAdd());
                this.itemToAdd("");
            }
        }.bind(this);
    };
 

ko.applyBindings(new SimpleListModel([items]));

</script>


===============================================


controller/message.php (チャット画面表示用)


===============================================

class Controller_Message extends Controller
{
    
    public function action_index()
    {

		$data['data'] = DB::select()->from('messages')->execute()->as_array();
		$data['contents'] = DB::select('content')->from('messages')->execute()->as_array();

        return View::forge('message/index', $data);

    }   

}

===============================================


controller/chat.php (チャット保存用)


===============================================

class Controller_Chat extends Controller_Rest
{
    
    protected $default_format = 'json';

    public function post_chat_post()
    {
        $username = Input::post('username');
        $message = Input::post('content');
        DB::insert('messages')->set(array(
			'username' => "$username",
			'content' => "$message",
		))->execute();

        $data['data'] = DB::select()->from('messages')->execute()->as_array();
        // Response::redirect('message/index', $data);
    }

}